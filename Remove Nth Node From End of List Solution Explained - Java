/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        // Create a dummy node to simplify edge cases
        ListNode dummy = new ListNode(0);
        dummy.next = head;

        // Initialize two pointers
        ListNode p1 = dummy;
        ListNode p2 = dummy;

        // Move the first pointer `n + 1` steps ahead (to account for the dummy node)
        for(int i=0; i<=n; i++){
            p1=p1.next;
        }

        // Move both pointers until `first` reaches the end
        while(p1 !=null){
            p1 = p1.next;
            p2 = p2.next;
        }
        // Remove the nth node from the end
        p2.next=p2.next.next;

        // Return the head of the modified list
        return dummy.next;
    }
}
